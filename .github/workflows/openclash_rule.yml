name: Rule Provider

on:
  schedule:
    - cron: '0 20 * * *'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pandas tldextract pyyaml openpyxl

      - name: Download and process source lists
        #working-directory: ./rule_provider
        run: |
          echo "Downloading Pi-hole Torrent Blocklist..."
          curl -sSf -o pi-hole-torrent.txt https://raw.githubusercontent.com/im-sm/Pi-hole-Torrent-Blocklist/main/all-torrent-trackres.txt

          if [ ! -f pi-hole-torrent.txt ]; then
              echo "Failed to download the torrent blocklist."
              exit 1
          fi

          # Process the file using Python
          python3 - <<EOF
          import re
          import yaml

          with open("pi-hole-torrent.txt", "r") as file:
              input_text = file.read()

          # Ekstraksi domain menggunakan regex
          payload_lines = re.findall(r"^(?!#)([a-zA-Z0-9.-]+\.[a-zA-Z]{2,})", input_text, re.MULTILINE)

          # Buat payload dengan format yang diinginkan
          payload = [f"+.{line}" for line in payload_lines]

          # YAML output
          data = {"payload": payload}
          yaml_output = yaml.dump(data, sort_keys=False, default_flow_style=False)

          with open("tracker-site.yaml", "w") as file:
              file.write(yaml_output)
          EOF
          rm pi-hole-torrent.txt

          
          echo "Downloading oisd nsfw source list..."
          curl -sSf -o oisd-nsfw.txt https://nsfw.oisd.nl
          python3 - <<EOF
          import re
          import yaml
          
          with open("oisd-nsfw.txt", "r") as file:
              input_text = file.read()
          
          payload_lines = re.findall(r"\|\|(.+)\^", input_text)
          payload = [f'"+.{line}"' for line in payload_lines]
          
          data = {
              "payload": payload
          }
          
          yaml_output = yaml.dump(data, sort_keys=False, default_flow_style=False)
          
          formatted_yaml = re.sub(r"(\s+-) '(.+)'", r"\1 \2", yaml_output)
          
          with open("nsfw.yaml", "w") as file:
              file.write(formatted_yaml)
          EOF
          rm oisd-nsfw.txt

          echo "Downloading Bank-ID source list"
          python3 - <<EOF
          import pandas as pd
          import tldextract
          import yaml
          import re
          
          excel_url = "https://ojk.go.id/id/kanal/perbankan/data-dan-statistik/Documents/Pages/Daftar-Alamat-Kantor-Pusat-Bank-Umum-Dan-Syariah/Daftar%20Alamat%20Kantor%20Pusat%20Bank%20Umum%20Dan%20Syariah%20-%20Februari%202023.xlsx"
          
          # Read the Excel file
          df = pd.read_excel(excel_url)
          
          # Extract valid domain TLDs
          valid_tlds = []
          for website in df["Website"].dropna():
              domain = tldextract.extract(website).registered_domain
              if domain:
                  valid_tlds.append(f'"+.{domain}"')
          
          # Create the data dictionary
          data = {"payload": valid_tlds}
          
          # Convert the data to YAML format
          yaml_output = yaml.dump(data, sort_keys=False)
          formatted_yaml = re.sub(r"(\s+-) '(.+)'", r"\1 \2", yaml_output)
          
          # Save the formatted YAML to a file
          output_file = "bank.yaml"
          with open(output_file, "w") as file:
              file.write(formatted_yaml)
            

      - uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: Automatic update Rule Provider Clash
          
      - name: Push changes to the repository
        run: git push
